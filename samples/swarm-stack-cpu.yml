services:
  service-registry:
    image: ${SUITE_IMAGE:-clifford666/swarm-autoscaler-suite}:${SUITE_TAG:-latest}
    environment:
      - ROLE=service-registry
      - DOCKER_BASE_URL=unix:///var/run/docker.sock
      - REFRESH_INTERVAL_SEC=30
      - METRICS_REFRESH_INTERVAL_SEC=3
      - LOG_LEVEL=DEBUG
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - autoscaler_net
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "5001:5001"

  autoscaler:
    image: ${SUITE_IMAGE:-clifford666/swarm-autoscaler-suite}:${SUITE_TAG:-latest}
    environment:
      - ROLE=autoscaler
      - DOCKER_SERVICE_URL=http://docker-service:5004
      - SERVICE_REGISTRY_URL=http://service-registry:5001
      - SCALE_COOLDOWN_SEC=10
      - POLL_INTERVAL_SEC=30
      - LOG_LEVEL=DEBUG
    networks:
      - autoscaler_net
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "5003:5003"

  docker-service:
    image: ${SUITE_IMAGE:-clifford666/swarm-autoscaler-suite}:${SUITE_TAG:-latest}
    environment:
      - ROLE=docker-service
      - DOCKER_BASE_URL=unix:///var/run/docker.sock
      - DATABASE_URL=sqlite:////data/events.db
      - LOG_LEVEL=DEBUG
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - docker_service_data:/data
    networks:
      - autoscaler_net
    deploy:
      mode: replicated
      replicas: 1
    # Optional: expose events API
    ports:
      - "5004:5004"

  ui:
    image: ${SUITE_IMAGE:-clifford666/swarm-autoscaler-suite}:${SUITE_TAG:-latest}
    environment:
      - ROLE=ui
      - DOCKER_SERVICE_URL=http://docker-service:5004
      - LOG_LEVEL=DEBUG
    networks:
      - autoscaler_net
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "8080:5005"

  sample_1:
    image: nginx:alpine
    networks:
      - autoscaler_net
    ports:
      - target: 80
        published: 8081
        protocol: tcp
        mode: ingress
    deploy:
      replicas: 2
      labels:
        - "autoscaler.enabled=true"
        - "autoscaler.metric=cpu"
        - "autoscaler.cpu.threshold=50"
        - "autoscaler.min=2"
        - "autoscaler.max=5"

  sample_2:
    image: nginx:alpine
    networks:
      - autoscaler_net
    ports:
      - target: 80
        published: 8082
        protocol: tcp
        mode: ingress
    deploy:
      replicas: 2
      labels:
        - "autoscaler.enabled=true"
        - "autoscaler.metric=cpu"
        - "autoscaler.cpu.threshold=50"
        - "autoscaler.min=2"
        - "autoscaler.max=5"

  # sample_3:
  #   image: nginx:alpine
  #   networks:
  #     - autoscaler_net
  #   ports:
  #     - target: 80
  #       published: 8083
  #       protocol: tcp
  #       mode: ingress
  #   deploy:
  #     replicas: 2
  #     labels:
  #       - "autoscaler.enabled=true"
  #       - "autoscaler.metric=cpu"
  #       - "autoscaler.cpu.threshold=50"
  #       - "autoscaler.min=2"
  #       - "autoscaler.max=5"

  # sample_4:
  #   image: nginx:alpine
  #   networks:
  #     - autoscaler_net
  #   ports:
  #     - target: 80
  #       published: 8084
  #       protocol: tcp
  #       mode: ingress
  #   deploy:
  #     replicas: 2
  #     labels:
  #       - "autoscaler.enabled=true"
  #       - "autoscaler.metric=cpu"
  #       - "autoscaler.cpu.threshold=50"
  #       - "autoscaler.min=2"
  #       - "autoscaler.max=5"

networks:
  autoscaler_net:
    driver: overlay
    attachable: true

volumes:
  docker_service_data:
    driver: local
